#!/usr/bin/env bash

source ~/.bashrc
module load rsu_sw_binaries
module load pipelines/cappmed
#module load docker

if [ "$#" -ne 3 ]
then
	echo "Need 3 command args"
	echo "sorted bam file"
	echo "slopped target bed file"
	echo "read length - 4 basepair MID length"
	exit
fi

bcdedup="/isilon/Analysis/onco/prog/CM_gitclone/ctdna-dedup-0.2.0/bam-dedupe-nothreads_MQ50.pl"
snvcaller="/isilon/Analysis/onco/prog/CM_gitclone/ctdna-snv-caller/R/snv_caller2.r"
freqgen="/isilon/Analysis/onco/prog/CM_gitclone/ctdna-freqgen/bam-snvfreq.pl"
samtools="/isilon/Apps/site_sw/prd/RHEL7.1_x86_64/samtools/1.2/bin/samtools"
polish="/isilon/Analysis/onco/prog/CM_gitclone/ctdna-bg-polishing/filter-freq.pl"

# Args:
#<sorted BAM file>
#<target BED file>
#<dual barcode (0/1)>
#<keep singleton variants (0/1)> - this is the tumor mode if set to 1
#<genome fasta file location>
#<singleton support (0)>
#<duplex only (0)>
#<minimum copies (1)>
#<minimum PHRED quality score (suggested value:30)>
#<read length>
#<outfile>\n";


sortedbam="$1"
targetbed="$2"
readlen="$3"
outname=${sortedbam/.sorted.bam/.dualindex-deduped.sorted.bam}
outnamedup=${sortedbam/.sorted.bam/.dualindex-deduped.duplex.sorted.bam}

# NOTE - can't run $bcdedup simultaneously because there's a glob cleanup
# step that will destroy intermediate files created by each other if 
# mistimed. Also means the input bams need to be in separate dirs which is weird
if [ 1 -ne 0 ]
then
$bcdedup $sortedbam $targetbed 1 0 /isilon/Analysis/onco/indexes/hg38/hg38.fa 0 0 1 30 $readlen $outname
# Now do same for duplex only
$bcdedup $sortedbam $targetbed 1 0 /isilon/Analysis/onco/indexes/hg38/hg38.fa 0 1 1 30 $readlen $outnamedup

# Now freqgen - use the docker image because don't know what version of samtools I should be using
# This didn't work - Johnny suggested -u $UID flag (what does that do??)
# I checked the docker build file - looks like samtools 1.2.1.r1
# our samtools version 1.2 says (using htslib 1.2.1) so I assume that's the same 
#docker run -w `pwd` -v `pwd`:`pwd` -v /isilon/Analysis/onco/indexes/hg38/:/isilon/Analysis/onco/indexes/hg38/ \
#	rpbuv011:5000/rsu/ctdna/ctdna-freqgen:v0.1.3 bam-snvfreq.pl $outname \
#	/isilon/Analysis/onco/indexes/hg38/hg38.fa $targetbed 1 30 1 1 \
#	samtools $outname".freq"

$freqgen $outname \
	/isilon/Analysis/onco/indexes/hg38/hg38.fa $targetbed 1 30 1 1 \
	$samtools $outname".snv.freq"


#docker run -w `pwd` -v `pwd`:`pwd` -v /isilon/Analysis/onco/indexes/hg38/:/isilon/Analysis/onco/indexes/hg38/ \
#	rpbuv011:5000/rsu/ctdna/ctdna-freqgen:v0.1.3 bam-snvfreq.pl $outnamedup \
#	/isilon/Analysis/onco/indexes/hg38/hg38.fa $targetbed 1 30 1 1 \
#	samtools $outnamedup".freq"

$freqgen $outnamedup \
	/isilon/Analysis/onco/indexes/hg38/hg38.fa $targetbed 1 30 1 1 \
	$samtools $outnamedup".snv.freq"


fi

# Now polish
polishout=$outname".snv.freq"
polishout=${polishout/.freq/.bg-polished.freq}
$polish $outname".snv.freq" $outnamedup".snv.freq" \
	/isilon/Analysis/onco/indexes/hg38/P2B_snvbg_20160519.txt \
	0.2 1 $polishout $polishout".qc"

$snvcaller $polishout $outnamedup".snv.freq" ${targetbed/.add500bp.bed/.bed} \
	/isilon/Analysis/onco/indexes/hg38/whitelist_final_P2_excluded_20160613.bed \
	0 ${sortedbam%%.sorted.bam} /isilon/Analysis/onco/indexes/hg38/6gene_blacklist.bed \
	/isilon/Analysis/onco/indexes/hg38/RefSeq_Gencodev23_20160605.allexons.sorted.bed

#$snvcaller "$TESTDIR/Sample_Spike1-1_cfDNA.dualindex-deduped.sorted.freq.paired.Q30.rmbg.txt" \
#"$TESTDIR/Sample_Spike1-1_cfDNA.dualindex-deduped.sorted.duplex.freq.paired.Q30.txt" \
#"/remote/Overflow/DataAnalysis/Oncology_Projects/design/NSCLC_CLIN_DEC2013.bed" \
#"$TESTDIR/whitelist_new.bed" \
#0 Spike1-1 \
#"$TESTDIR/5gene_blacklist.bed" \
#"/isilon/Analysis/onco/indexes/hg19/RefSeq_Gencodev17_022314.allexons.bed"
#
#
#$snvcaller    
